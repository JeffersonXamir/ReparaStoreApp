// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReparaStoreApp.Data;

#nullable disable

namespace ReparaStoreApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250702045227_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SEC_ROLES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Acceso total al sistema",
                            Name = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manejo de transacciones financieras",
                            Name = "Cajero"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Reparación y mantenimiento",
                            Name = "Técnico"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Usuario final del sistema",
                            Name = "Cliente"
                        });
                });

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("SEC_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 2, 4, 52, 26, 749, DateTimeKind.Utc).AddTicks(2549),
                            Email = "admin@reparastore.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$/7aVnDBD3Kripb8YQcIBWuKEhubxhyMGiU.a.EoLimP5TC1M.faPq",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("SEC_USUARIO_ROLES", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1,
                            Id = 0
                        });
                });

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.UserRole", b =>
                {
                    b.HasOne("ReparaStoreApp.Entities.Models.Security.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReparaStoreApp.Entities.Models.Security.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ReparaStoreApp.Entities.Models.Security.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
